// DO NOT EDIT.  This file was generated by resource_importer.
// Checksum: 0527e295786e5f42770f56f14cee414cae1587c1

// ignore_for_file: always_specify_types
// ignore_for_file: always_use_package_imports
// ignore_for_file: lines_longer_than_80_chars
// ignore_for_file: prefer_single_quotes
// ignore_for_file: public_member_api_docs
// ignore_for_file: require_trailing_commas

var get_chunks =
    "function loadResource(url, withOrder = false) {\n    return fetch(url, { headers: { 'Content-Encoding': 'gzip' } })\n        .then(function (response) {\n            return response.text()\n        })\n        .then(function (response) {\n            if (!withOrder) {\n                return response\n            }\n\n            return {\n                'order': parseInt(url.split('-')[0]),\n                'text': response,\n            }\n        })\n}\n\nfunction buildDart(mainJsFileStr) {\n    const script = document.createElement('script');\n    script.text = mainJsFileStr;\n    script.type = 'text/javascript';\n    document.body.appendChild(script);\n}\n\nloadResource('/resources.json?v=' + window.version).then(function (resources) {\n    const parts = [];\n\n    try {\n        const response = JSON.parse(resources)['parts'];\n        parts.push(...response);\n    }\n    catch (_) { }\n\n    if (parts.length == 0) {\n        return;\n    }\n\n    Promise.all(\n        parts.map(function (part) {\n            return loadResource('/' + part, true)\n        }))\n        .then(function (resources) {\n            resources.sort(function (a, b) {\n                return a.order - b.order\n            });\n\n            const mainJsFileStr = resources.map(function (item) {\n                return item.text;\n            }).join('');\n\n            buildDart(mainJsFileStr)\n        })\n})";
